# Generated by Django 3.0.7 on 2020-11-18 19:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commenter', models.IntegerField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
                ('text', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True)),
                ('start', models.DateTimeField(blank=True)),
                ('organizer', models.IntegerField(blank=True)),
                ('content', models.TextField(blank=True)),
                ('background', models.TextField(blank=True)),
                ('place_name', models.TextField(blank=True)),
                ('latitude', models.FloatField(blank=True)),
                ('longitude', models.FloatField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=144)),
                ('content', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image_url', models.TextField(blank=True)),
                ('image_file', models.FileField(blank=True, upload_to='%Y/%m/%d')),
                ('viewcount', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.TextField(blank=True)),
                ('title', models.CharField(blank=True, max_length=144)),
                ('content', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('viewcount', models.IntegerField(default=0)),
                ('numlike', models.IntegerField(default=0)),
                ('numcomment', models.IntegerField(default=0)),
                ('category', models.TextField(default='board')),
                ('YouTube', models.TextField(blank=True, default='')),
                ('image_file', models.ImageField(blank=True, height_field='height', null=True, upload_to='%Y/%m/%d', width_field='width')),
                ('image_url', models.TextField(blank=True)),
                ('width', models.IntegerField(blank=True, default=1, null=True)),
                ('height', models.IntegerField(blank=True, default=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recomment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commenter', models.IntegerField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField()),
                ('text', models.CharField(max_length=200)),
                ('commentid', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='recomments', to='accounts.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('username', models.TextField(blank=True)),
                ('nickname', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
                ('description', models.TextField(blank=True)),
                ('user_image', models.TextField(blank=True)),
                ('nationality', models.TextField(blank=True)),
                ('skill', models.TextField(blank=True)),
                ('phone', models.TextField(blank=True)),
                ('level', models.TextField(blank=True)),
                ('ispublic', models.BooleanField(blank=True, default=True)),
                ('facebook', models.TextField(blank=True)),
                ('instargram', models.TextField(blank=True)),
                ('twitter', models.TextField(blank=True)),
                ('kakaotalk', models.TextField(blank=True)),
                ('permission', models.IntegerField(blank=True, default=4)),
                ('event', models.ManyToManyField(blank=True, related_name='join_event', to='accounts.Event')),
                ('follower', models.ManyToManyField(blank=True, related_name='followers', to='accounts.Profile')),
                ('following', models.ManyToManyField(blank=True, related_name='followings', to='accounts.Profile')),
                ('posts', models.ManyToManyField(blank=True, related_name='like_users', to='accounts.Post')),
            ],
        ),
        migrations.AddField(
            model_name='post',
            name='profileid',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='myposts', to='accounts.Profile'),
        ),
        migrations.AddField(
            model_name='post',
            name='profiles',
            field=models.ManyToManyField(blank=True, related_name='like_posts', to='accounts.Profile'),
        ),
        migrations.AddField(
            model_name='event',
            name='profile',
            field=models.ManyToManyField(blank=True, related_name='join_people', to='accounts.Profile'),
        ),
        migrations.AddField(
            model_name='comment',
            name='postid',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='accounts.Post'),
        ),
    ]
